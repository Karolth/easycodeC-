@{
    ViewData["Title"] = "Historial de Inicios de Sesión";
    Layout = null; // Puedes asignar un layout compartido aquí, por ejemplo, "_Layout.cshtml"
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/public/css/HistorialUsuario.css">
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #2a8e76;
            color: white;
        }
        tr:hover {
            background-color: #f5f5f5;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Historial de Inicios de Sesión</h1>
        <table id="tablaHistorialLogin">
            <thead>
                <tr>
                    <th>Documento</th>
                    <th>Nombre</th>
                    <th>Fecha y Hora</th>
                    <th>Rol</th>
                </tr>
            </thead>
            <tbody>
                @*
                    Aquí es donde se cargarán los datos del historial de inicio de sesión.
                    Al igual que con el historial de movimientos, tienes dos opciones principales:

                    1.  **Renderizado del lado del servidor (C# Razor):**
                        Si pasas una lista de objetos de historial de login (ej. `List<LoginHistoryEntry>`)
                        desde tu controlador a esta vista, puedes usar un bucle `@foreach`
                        para generar las filas `<tr>` y celdas `<td>` directamente en el HTML.

                    2.  **Carga dinámica con JavaScript (AJAX):**
                        Tu archivo `historialLogin.js` probablemente hará una solicitud AJAX
                        a un endpoint de tu API en ASP.NET Core. Este endpoint debería devolver
                        los datos del historial en formato JSON. Luego, tu JavaScript
                        procesará esa respuesta para poblar la tabla.
                        Esta es la opción más común y recomendada para tablas dinámicas
                        y grandes volúmenes de datos.
                *@
            </tbody>
        </table>
    </div>
    <script src="~/public/js/historialLogin.js"></script>
</body>
</html>